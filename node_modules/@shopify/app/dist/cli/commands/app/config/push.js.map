{"version":3,"file":"push.js","sourceRoot":"","sources":["../../../../../src/cli/commands/app/config/push.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAA;AAC1C,OAAO,OAAO,MAAM,mCAAmC,CAAA;AACvD,OAAO,EAAC,UAAU,EAAC,MAAM,sCAAsC,CAAA;AAC/D,OAAO,EAAC,IAAI,IAAI,OAAO,EAAC,MAAM,+BAA+B,CAAA;AAC7D,OAAO,EAAC,UAAU,EAAC,MAAM,oCAAoC,CAAA;AAC7D,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AAErD,MAAqB,UAAW,SAAQ,OAAO;IAetC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;QAC5C,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,UAAU,CAAA;QACrE,MAAM,GAAG,GAAG,MAAM,OAAO,CAAC,EAAC,cAAc,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,CAAA;QAElG,MAAM,UAAU,CAAC,EAAC,GAAG,EAAC,CAAC,CAAA;IACzB,CAAC;;AApBM,iBAAM,GAAG,IAAI,CAAA;AAEb,sBAAW,GAAG,kDAAkD,CAAA;AAEhE,gBAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;IACX,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC;QACnB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,2BAA2B;QACxC,GAAG,EAAE,yBAAyB;KAC/B,CAAC;CACH,CAAA;eAbkB,UAAU","sourcesContent":["import {appFlags} from '../../../flags.js'\nimport Command from '../../../utilities/app-command.js'\nimport {pushConfig} from '../../../services/app/config/push.js'\nimport {load as loadApp} from '../../../models/app/loader.js'\nimport {getAppInfo} from '../../../services/local-storage.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\n\nexport default class ConfigPush extends Command {\n  static hidden = true\n\n  static description = \"Push your app's config to the Partner Dashboard.\"\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    config: Flags.string({\n      hidden: false,\n      description: 'Name for the config file.',\n      env: 'SHOPIFY_FLAG_APP_CONFIG',\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(ConfigPush)\n    const configName = flags.config || getAppInfo(flags.path)?.configFile\n    const app = await loadApp({specifications: [], configName, directory: flags.path, mode: 'report'})\n\n    await pushConfig({app})\n  }\n}\n"]}