{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../../src/cli/models/app/app.ts"],"names":[],"mappings":"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","sourcesContent":["import {AppErrors} from './loader.js'\nimport {ExtensionInstance} from '../extensions/extension-instance.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {DotEnvFile} from '@shopify/cli-kit/node/dot-env'\nimport {getDependencies, PackageManager, readAndParsePackageJson} from '@shopify/cli-kit/node/node-package-manager'\nimport {fileRealPath, findPathUp} from '@shopify/cli-kit/node/fs'\nimport {joinPath, dirname} from '@shopify/cli-kit/node/path'\n\nexport const AppConfigurationSchema = zod.object({\n  extension_directories: zod.array(zod.string()).optional(),\n  web_directories: zod.array(zod.string()).optional(),\n  name: zod.string().optional(),\n  client_id: zod.string().optional(),\n  scopes: zod.string().default(''),\n  application_url: zod.string().optional(),\n  redirect_url_allowlist: zod.array(zod.string()).optional(),\n  requested_access_scopes: zod.array(zod.string()).optional(),\n})\n\nexport enum WebType {\n  Frontend = 'frontend',\n  Backend = 'backend',\n  Background = 'background',\n}\n\nconst ensurePathStartsWithSlash = (arg: unknown) => (typeof arg === 'string' && !arg.startsWith('/') ? `/${arg}` : arg)\n\nconst WebConfigurationAuthCallbackPathSchema = zod.preprocess(ensurePathStartsWithSlash, zod.string())\n\nconst baseWebConfigurationSchema = zod.object({\n  auth_callback_path: zod\n    .union([WebConfigurationAuthCallbackPathSchema, WebConfigurationAuthCallbackPathSchema.array()])\n    .optional(),\n  webhooks_path: zod.preprocess(ensurePathStartsWithSlash, zod.string()).optional(),\n  port: zod.number().max(65536).min(0).optional(),\n  commands: zod.object({\n    build: zod.string().optional(),\n    dev: zod.string(),\n  }),\n  name: zod.string().optional(),\n})\nconst webTypes = zod.enum([WebType.Frontend, WebType.Backend, WebType.Background]).default(WebType.Frontend)\nexport const WebConfigurationSchema = zod.union([\n  baseWebConfigurationSchema.extend({roles: zod.array(webTypes)}),\n  baseWebConfigurationSchema.extend({type: webTypes}),\n])\nexport const ProcessedWebConfigurationSchema = baseWebConfigurationSchema.extend({roles: zod.array(webTypes)})\n\nexport type AppConfiguration = zod.infer<typeof AppConfigurationSchema>\nexport type WebConfiguration = zod.infer<typeof WebConfigurationSchema>\nexport type ProcessedWebConfiguration = zod.infer<typeof ProcessedWebConfigurationSchema>\nexport type WebConfigurationCommands = keyof WebConfiguration['commands']\n\nexport interface Web {\n  directory: string\n  configuration: ProcessedWebConfiguration\n  framework?: string\n}\n\nexport interface AppInterface {\n  name: string\n  idEnvironmentVariableName: string\n  directory: string\n  packageManager: PackageManager\n  configuration: AppConfiguration\n  configurationPath: string\n  nodeDependencies: {[key: string]: string}\n  webs: Web[]\n  usesWorkspaces: boolean\n  dotenv?: DotEnvFile\n  allExtensions: ExtensionInstance[]\n  errors?: AppErrors\n  hasExtensions: () => boolean\n  updateDependencies: () => Promise<void>\n  extensionsForType: (spec: {identifier: string; externalIdentifier: string}) => ExtensionInstance[]\n}\n\nexport class App implements AppInterface {\n  name: string\n  idEnvironmentVariableName: string\n  directory: string\n  packageManager: PackageManager\n  configuration: AppConfiguration\n  configurationPath: string\n  nodeDependencies: {[key: string]: string}\n  webs: Web[]\n  usesWorkspaces: boolean\n  dotenv?: DotEnvFile\n  errors?: AppErrors\n  allExtensions: ExtensionInstance[]\n\n  // eslint-disable-next-line max-params\n  constructor(\n    name: string,\n    idEnvironmentVariableName: string,\n    directory: string,\n    packageManager: PackageManager,\n    configuration: AppConfiguration,\n    configurationPath: string,\n    nodeDependencies: {[key: string]: string},\n    webs: Web[],\n    extensions: ExtensionInstance[],\n    usesWorkspaces: boolean,\n    dotenv?: DotEnvFile,\n    errors?: AppErrors,\n  ) {\n    this.name = name\n    this.idEnvironmentVariableName = idEnvironmentVariableName\n    this.directory = directory\n    this.packageManager = packageManager\n    this.configuration = configuration\n    this.configurationPath = configurationPath\n    this.nodeDependencies = nodeDependencies\n    this.webs = webs\n    this.dotenv = dotenv\n    this.allExtensions = extensions\n    this.errors = errors\n    this.usesWorkspaces = usesWorkspaces\n  }\n\n  async updateDependencies() {\n    const nodeDependencies = await getDependencies(joinPath(this.directory, 'package.json'))\n    this.nodeDependencies = nodeDependencies\n  }\n\n  hasExtensions(): boolean {\n    return this.allExtensions.length > 0\n  }\n\n  extensionsForType(specification: {identifier: string; externalIdentifier: string}): ExtensionInstance[] {\n    return this.allExtensions.filter(\n      (extension) => extension.type === specification.identifier || extension.type === specification.externalIdentifier,\n    )\n  }\n}\n\ntype RendererVersionResult = {name: string; version: string} | undefined | 'not_found'\n\n/**\n * Given a UI extension and the app it belongs to, it returns the version of the renderer package.\n * Looks for `/node_modules/@shopify/{renderer-package-name}/package.json` to find the real version used.\n * @param uiExtensionType - UI extension whose renderer version will be obtained.\n * @param app - App object containing the extension.\n * @returns The version if the dependency exists.\n */\nexport async function getUIExtensionRendererVersion(\n  extension: ExtensionInstance,\n  app: AppInterface,\n): Promise<RendererVersionResult> {\n  // Look for the vanilla JS version of the dependency (the react one depends on it, will always be present)\n  const rendererDependency = extension.dependency\n  if (!rendererDependency) return undefined\n  return getDependencyVersion(rendererDependency, app.directory)\n}\n\nexport async function getDependencyVersion(dependency: string, directory: string): Promise<RendererVersionResult> {\n  const isReact = dependency.includes('-react')\n  let cwd = directory\n  /**\n   * PNPM creates a symlink to a global cache where dependencies are hoisted. Therefore\n   * we need to first look up the *-react package and use that as a working directory from\n   * where to look up the non-react package.\n   */\n  if (isReact) {\n    const dependencyName = dependency.split('/')\n    const pattern = joinPath('node_modules', dependencyName[0]!, dependencyName[1]!, 'package.json')\n    const reactPackageJsonPath = await findPathUp(pattern, {\n      type: 'file',\n      cwd: directory,\n      allowSymlinks: true,\n    })\n    if (!reactPackageJsonPath) {\n      return 'not_found'\n    }\n    cwd = await fileRealPath(dirname(reactPackageJsonPath))\n  }\n\n  // Split the dependency name to avoid using \"/\" in windows\n  const dependencyName = dependency.replace('-react', '').split('/')\n  const pattern = joinPath('node_modules', dependencyName[0]!, dependencyName[1]!, 'package.json')\n\n  let packagePath = await findPathUp(pattern, {\n    cwd,\n    type: 'file',\n    allowSymlinks: true,\n  })\n  if (!packagePath) return 'not_found'\n  packagePath = await fileRealPath(packagePath)\n\n  // Load the package.json and extract the version\n  const packageContent = await readAndParsePackageJson(packagePath)\n  if (!packageContent.version) return 'not_found'\n  return {name: dependency, version: packageContent.version}\n}\n"]}