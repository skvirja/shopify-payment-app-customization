{"version":3,"file":"link.js","sourceRoot":"","sources":["../../../../../src/cli/services/app/config/link.ts"],"names":[],"mappings":"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","sourcesContent":["import {saveCurrentConfig} from './use.js'\nimport {AppConfiguration, AppInterface} from '../../../models/app/app.js'\nimport {OrganizationApp} from '../../../models/organization.js'\nimport {selectConfigName} from '../../../prompts/config.js'\nimport {loadExtensionsSpecifications} from '../../../models/extensions/load-specifications.js'\nimport {load} from '../../../models/app/loader.js'\nimport {InvalidApiKeyErrorMessage, fetchOrCreateOrganizationApp} from '../../context.js'\nimport {fetchAppFromApiKey} from '../../dev/fetch.js'\nimport {Config} from '@oclif/core'\nimport {renderSuccess} from '@shopify/cli-kit/node/ui'\nimport {fileExists, writeFileSync} from '@shopify/cli-kit/node/fs'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {encodeToml} from '@shopify/cli-kit/node/toml'\nimport {ensureAuthenticatedPartners} from '@shopify/cli-kit/node/session'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {slugify} from '@shopify/cli-kit/common/string'\n\nexport interface LinkOptions {\n  commandConfig: Config\n  directory: string\n  apiKey?: string\n  configName?: string\n}\n\nexport default async function link(options: LinkOptions): Promise<void> {\n  const localApp = await loadAppConfigFromLegacyToml(options)\n  const remoteApp = await loadRemoteApp(localApp, options.apiKey)\n  const configName =\n    (options.configName && slugify(options.configName)) || (await selectConfigName(options.directory, remoteApp.title))\n  const configFileName = `shopify.app.${configName}.toml`\n  const configFilePath = joinPath(options.directory, configFileName)\n  const fileAlreadyExists = await fileExists(configFilePath)\n\n  const configuration = mergeAppConfiguration(localApp, remoteApp)\n\n  writeFileSync(configFilePath, encodeToml(configuration))\n\n  await saveCurrentConfig({configFileName, directory: options.directory})\n\n  renderSuccess({\n    headline: `App \"${remoteApp.title}\" connected to this codebase, file ${configFileName} ${\n      fileAlreadyExists ? 'updated' : 'created'\n    }`,\n  })\n}\n\nasync function loadAppConfigFromLegacyToml(options: LinkOptions): Promise<AppInterface> {\n  try {\n    const specifications = await loadExtensionsSpecifications(options.commandConfig)\n    const app = await load({specifications, directory: options.directory, mode: 'report'})\n    return app\n    // eslint-disable-next-line no-catch-all/no-catch-all\n  } catch (error) {\n    return {name: ''} as AppInterface\n  }\n}\n\nasync function loadRemoteApp(localApp: AppInterface, apiKey: string | undefined): Promise<OrganizationApp> {\n  const token = await ensureAuthenticatedPartners()\n  if (!apiKey) {\n    return fetchOrCreateOrganizationApp(localApp, token)\n  }\n  const app = await fetchAppFromApiKey(apiKey, token)\n  if (!app) {\n    const errorMessage = InvalidApiKeyErrorMessage(apiKey)\n    throw new AbortError(errorMessage.message, errorMessage.tryMessage)\n  }\n  return app\n}\n\nfunction mergeAppConfiguration(localApp: AppInterface, remoteApp: OrganizationApp): AppConfiguration {\n  const configuration = localApp.configuration || {}\n\n  configuration.client_id = remoteApp.apiKey\n  configuration.name = remoteApp.title\n  configuration.application_url = remoteApp.applicationUrl\n  configuration.redirect_url_allowlist = remoteApp.redirectUrlWhitelist\n\n  return configuration\n}\n"]}