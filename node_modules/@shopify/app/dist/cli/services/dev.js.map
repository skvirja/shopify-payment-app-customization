{"version":3,"file":"dev.js","sourceRoot":"","sources":["../../../src/cli/services/dev.ts"],"names":[],"mappings":"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","sourcesContent":["import {ensureDevContext} from './context.js'\nimport {\n  generateFrontendURL,\n  generatePartnersURLs,\n  getURLs,\n  shouldOrPromptUpdateURLs,\n  startTunnelPlugin,\n  updateURLs,\n} from './dev/urls.js'\nimport {installAppDependencies} from './dependencies.js'\nimport {devUIExtensions} from './dev/extension.js'\nimport {outputExtensionsMessages, outputUpdateURLsResult, renderDev} from './dev/output.js'\nimport {themeExtensionArgs} from './dev/theme-extension-args.js'\nimport {fetchSpecifications} from './generate/fetch-extension-specifications.js'\nimport {sendUninstallWebhookToAppServer} from './webhook/send-app-uninstalled-webhook.js'\nimport {ensureDeploymentIdsPresence} from './context/identifiers.js'\nimport {setupConfigWatcher, setupDraftableExtensionBundler, setupFunctionWatcher} from './dev/extension/bundler.js'\nimport {buildFunctionExtension} from './build/extension.js'\nimport {updateExtensionDraft} from './dev/update-extension.js'\nimport {\n  ReverseHTTPProxyTarget,\n  runConcurrentHTTPProcessesAndPathForwardTraffic,\n} from '../utilities/app/http-reverse-proxy.js'\nimport {AppInterface, AppConfiguration, Web, WebType} from '../models/app/app.js'\nimport metadata from '../metadata.js'\nimport {fetchProductVariant} from '../utilities/extensions/fetch-product-variant.js'\nimport {load} from '../models/app/loader.js'\nimport {getAppIdentifiers} from '../models/app/identifiers.js'\nimport {getAnalyticsTunnelType} from '../utilities/analytics.js'\nimport {buildAppURLForWeb} from '../utilities/app/app-url.js'\nimport {HostThemeManager} from '../utilities/host-theme-manager.js'\n\nimport {ExtensionInstance} from '../models/extensions/extension-instance.js'\nimport {ExtensionSpecification} from '../models/extensions/specification.js'\nimport {Config} from '@oclif/core'\nimport {reportAnalyticsEvent} from '@shopify/cli-kit/node/analytics'\nimport {execCLI2} from '@shopify/cli-kit/node/ruby'\nimport {checkPortAvailability, getAvailableTCPPort} from '@shopify/cli-kit/node/tcp'\nimport {AbortSignal} from '@shopify/cli-kit/node/abort'\nimport {hashString} from '@shopify/cli-kit/node/crypto'\nimport {exec} from '@shopify/cli-kit/node/system'\nimport {isSpinEnvironment, spinFqdn} from '@shopify/cli-kit/node/context/spin'\nimport {\n  AdminSession,\n  ensureAuthenticatedAdmin,\n  ensureAuthenticatedPartners,\n  ensureAuthenticatedStorefront,\n} from '@shopify/cli-kit/node/session'\nimport {OutputProcess} from '@shopify/cli-kit/node/output'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {getBackendPort} from '@shopify/cli-kit/node/environment'\nimport {TunnelClient} from '@shopify/cli-kit/node/plugins/tunnel'\nimport {Writable} from 'stream'\n\nconst MANIFEST_VERSION = '3'\n\nexport interface DevOptions {\n  directory: string\n  id?: number\n  apiKey?: string\n  storeFqdn?: string\n  reset: boolean\n  update: boolean\n  commandConfig: Config\n  skipDependenciesInstallation: boolean\n  subscriptionProductUrl?: string\n  checkoutCartUrl?: string\n  tunnelUrl?: string\n  tunnelProvider: string\n  noTunnel: boolean\n  theme?: string\n  themeExtensionPort?: number\n  notify?: string\n}\n\nasync function dev(options: DevOptions) {\n  // Be optimistic about tunnel creation and do it as early as possible\n  const tunnelPort = await getAvailableTCPPort()\n\n  let tunnelClient: TunnelClient | undefined\n  if (!options.tunnelUrl) {\n    tunnelClient = await startTunnelPlugin(options.commandConfig, tunnelPort, options.tunnelProvider)\n  }\n\n  const token = await ensureAuthenticatedPartners()\n  const {\n    storeFqdn,\n    remoteApp,\n    remoteAppUpdated,\n    updateURLs: cachedUpdateURLs,\n    useCloudflareTunnels,\n  } = await ensureDevContext(options, token)\n\n  if (!options.tunnelUrl && !useCloudflareTunnels && options.tunnelProvider === 'cloudflare') {\n    // If we can't use cloudflare, stop the previous optimistic tunnel and start a new one\n    tunnelClient?.stopTunnel()\n    tunnelClient = await startTunnelPlugin(options.commandConfig, tunnelPort, 'ngrok')\n  }\n\n  const apiKey = remoteApp.apiKey\n  const specifications = await fetchSpecifications({token, apiKey, config: options.commandConfig})\n  let localApp = await load({directory: options.directory, specifications})\n\n  if (!options.skipDependenciesInstallation && !localApp.usesWorkspaces) {\n    localApp = await installAppDependencies(localApp)\n  }\n\n  const frontendConfig = localApp.webs.find((web) => isWebType(web, WebType.Frontend))\n  const backendConfig = localApp.webs.find((web) => isWebType(web, WebType.Backend))\n  const webhooksPath =\n    localApp.webs.map(({configuration}) => configuration.webhooks_path).find((path) => path) || '/api/webhooks'\n  const sendUninstallWebhook = Boolean(webhooksPath) && remoteAppUpdated\n\n  await validateCustomPorts(localApp.webs)\n\n  const [{frontendUrl, frontendPort, usingLocalhost}, backendPort, frontendServerPort, currentURLs] = await Promise.all(\n    [\n      generateFrontendURL({\n        ...options,\n        app: localApp,\n        tunnelClient,\n      }),\n      getBackendPort() || backendConfig?.configuration.port || getAvailableTCPPort(),\n      frontendConfig?.configuration.port || getAvailableTCPPort(),\n      getURLs(apiKey, token),\n    ],\n  )\n  if (frontendConfig && !frontendConfig.configuration.port) frontendConfig.configuration.port = frontendServerPort\n\n  const exposedUrl = usingLocalhost ? `${frontendUrl}:${frontendPort}` : frontendUrl\n  const proxyTargets: ReverseHTTPProxyTarget[] = []\n  const proxyPort = usingLocalhost ? await getAvailableTCPPort() : frontendPort\n  const proxyUrl = usingLocalhost ? `${frontendUrl}:${proxyPort}` : frontendUrl\n\n  let previewUrl\n  let shouldUpdateURLs = false\n\n  if (frontendConfig || backendConfig) {\n    previewUrl = buildAppURLForWeb(storeFqdn, apiKey)\n    if (options.update) {\n      const newURLs = generatePartnersURLs(\n        exposedUrl,\n        localApp.webs.map(({configuration}) => configuration.auth_callback_path).find((path) => path),\n      )\n      shouldUpdateURLs = await shouldOrPromptUpdateURLs({\n        currentURLs,\n        appDirectory: localApp.directory,\n        cachedUpdateURLs,\n        newApp: remoteApp.newApp,\n      })\n      if (shouldUpdateURLs) await updateURLs(newURLs, apiKey, token)\n      await outputUpdateURLsResult(shouldUpdateURLs, newURLs, remoteApp)\n    }\n  }\n\n  // If we have a real UUID for an extension, use that instead of a random one\n  const prodEnvIdentifiers = getAppIdentifiers({app: localApp})\n  const envExtensionsIds = prodEnvIdentifiers.extensions || {}\n  const extensionsIds = prodEnvIdentifiers.app === apiKey ? envExtensionsIds : {}\n  localApp.allExtensions.forEach((ext) => (ext.devUUID = extensionsIds[ext.localIdentifier] ?? ext.devUUID))\n\n  const additionalProcesses: OutputProcess[] = []\n\n  const apiSecret = (remoteApp.apiSecret as string) ?? ''\n\n  const webOptions = {\n    apiKey,\n    scopes: localApp.configuration.scopes,\n    apiSecret,\n    backendPort,\n    frontendServerPort,\n  }\n\n  await Promise.all(\n    localApp.webs.map(async (web) => {\n      const isFrontend = isWebType(web, WebType.Frontend)\n      const hostname = isFrontend ? frontendUrl : exposedUrl\n      const fullWebOptions: DevWebOptions = {...webOptions, web, hostname}\n\n      if (isFrontend && !usingLocalhost) {\n        proxyTargets.push(await devProxyTarget(fullWebOptions))\n      } else {\n        let port: number\n        if (isFrontend) {\n          port = frontendPort\n        } else if (isWebType(web, WebType.Backend)) {\n          port = backendPort\n        } else {\n          port = await getAvailableTCPPort()\n        }\n        additionalProcesses.push(await devNonProxyTarget(fullWebOptions, port))\n      }\n    }),\n  )\n\n  const unifiedDeployment = remoteApp?.betas?.unifiedAppDeployment ?? false\n  const previewableExtensions = localApp.allExtensions.filter((ext) => ext.isPreviewable)\n  const draftableExtensions = localApp.allExtensions.filter((ext) => ext.isDraftable(unifiedDeployment))\n\n  if (previewableExtensions.length > 0) {\n    previewUrl = `${proxyUrl}/extensions/dev-console`\n    const devExt = await devUIExtensionsTarget({\n      app: localApp,\n      id: remoteApp.id,\n      apiKey,\n      url: proxyUrl,\n      storeFqdn,\n      grantedScopes: remoteApp.grantedScopes,\n      subscriptionProductUrl: options.subscriptionProductUrl,\n      checkoutCartUrl: options.checkoutCartUrl,\n      extensions: previewableExtensions,\n    })\n    proxyTargets.push(devExt)\n  }\n\n  // Remove this once theme app extensions and functions are displayed\n  // by the dev console\n  outputExtensionsMessages(localApp)\n\n  if (draftableExtensions.length > 0) {\n    const {extensionIds: remoteExtensions} = await ensureDeploymentIdsPresence({\n      app: localApp,\n      partnersApp: remoteApp,\n      appId: apiKey,\n      appName: remoteApp.title,\n      force: true,\n      token,\n      envIdentifiers: prodEnvIdentifiers,\n    })\n\n    additionalProcesses.push(\n      devDraftableExtensionTarget({\n        app: localApp,\n        apiKey,\n        url: proxyUrl,\n        token,\n        extensions: draftableExtensions,\n        remoteExtensions,\n        specifications,\n        unifiedDeployment,\n      }),\n    )\n  }\n\n  const themeExtensions = localApp.allExtensions.filter((ext) => ext.isThemeExtension)\n  if (themeExtensions.length > 0) {\n    const adminSession = await ensureAuthenticatedAdmin(storeFqdn)\n    const extension = themeExtensions[0]!\n    let optionsToOverwrite = {}\n    if (!options.theme) {\n      const theme = await new HostThemeManager(adminSession).findOrCreate()\n      optionsToOverwrite = {\n        theme: theme.id.toString(),\n        generateTmpTheme: true,\n      }\n    }\n    const [storefrontToken, args] = await Promise.all([\n      ensureAuthenticatedStorefront(),\n      themeExtensionArgs(extension, apiKey, token, {...options, ...optionsToOverwrite}),\n    ])\n    const devExt = devThemeExtensionTarget(args, adminSession, storefrontToken, token)\n    additionalProcesses.push(devExt)\n  }\n\n  if (sendUninstallWebhook) {\n    additionalProcesses.push({\n      prefix: 'webhooks',\n      action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n        // If we have a backend, use that port, otherwise use the frontend port\n        const deliveryPort = backendConfig ? backendPort : frontendPort\n\n        await sendUninstallWebhookToAppServer({\n          stdout,\n          token,\n          address: `http://localhost:${deliveryPort}${webhooksPath}`,\n          sharedSecret: apiSecret,\n          storeFqdn,\n        })\n      },\n    })\n  }\n\n  await logMetadataForDev({devOptions: options, tunnelUrl: frontendUrl, shouldUpdateURLs, storeFqdn})\n\n  await reportAnalyticsEvent({config: options.commandConfig})\n\n  if (proxyTargets.length === 0) {\n    await renderDev(\n      {\n        processes: additionalProcesses,\n      },\n      previewUrl,\n    )\n  } else {\n    await runConcurrentHTTPProcessesAndPathForwardTraffic({\n      previewUrl,\n      portNumber: proxyPort,\n      proxyTargets,\n      additionalProcesses,\n    })\n  }\n}\n\nfunction isWebType(web: Web, type: WebType): boolean {\n  return web.configuration.roles.includes(type)\n}\n\ninterface DevWebOptions {\n  web: Web\n  backendPort: number\n  frontendServerPort: number\n  apiKey: string\n  apiSecret?: string\n  hostname?: string\n  scopes?: AppConfiguration['scopes']\n}\n\nasync function devNonProxyTarget(options: DevWebOptions, port: number): Promise<OutputProcess> {\n  const {logPrefix, action} = await devProxyTarget(options)\n  return {\n    prefix: logPrefix,\n    action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n      await action(stdout, stderr, signal, port)\n    },\n  }\n}\n\nfunction devThemeExtensionTarget(\n  args: string[],\n  adminSession: AdminSession,\n  storefrontToken: string,\n  token: string,\n): OutputProcess {\n  return {\n    prefix: 'extensions',\n    action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n      await execCLI2(['extension', 'serve', ...args], {\n        store: adminSession.storeFqdn,\n        adminToken: adminSession.token,\n        storefrontToken,\n        token,\n        stdout,\n        stderr,\n        signal,\n      })\n    },\n  }\n}\n\nasync function devProxyTarget(options: DevWebOptions): Promise<ReverseHTTPProxyTarget> {\n  const port = options.web.configuration.port\n\n  const {commands} = options.web.configuration\n  const [cmd, ...args] = commands.dev.split(' ')\n\n  const env = {\n    SHOPIFY_API_KEY: options.apiKey,\n    SHOPIFY_API_SECRET: options.apiSecret,\n    HOST: options.hostname,\n    SCOPES: options.scopes,\n    NODE_ENV: `development`,\n    ...(isSpinEnvironment() && {\n      SHOP_CUSTOM_DOMAIN: `shopify.${await spinFqdn()}`,\n    }),\n    BACKEND_PORT: `${options.backendPort}`,\n    FRONTEND_PORT: `${options.frontendServerPort}`,\n    APP_URL: options.hostname,\n    APP_ENV: 'development',\n  }\n\n  return {\n    logPrefix: options.web.configuration.name ?? ['web', ...options.web.configuration.roles].join('-'),\n    customPort: port,\n    action: async (stdout: Writable, stderr: Writable, signal: AbortSignal, port: number) => {\n      await exec(cmd!, args, {\n        cwd: options.web.directory,\n        stdout,\n        stderr,\n        signal,\n        env: {\n          ...env,\n          PORT: `${port}`,\n          // Note: These are Laravel variables for backwards compatibility with 2.0 templates.\n          SERVER_PORT: `${port}`,\n        },\n      })\n    },\n  }\n}\n\ninterface DevUIExtensionsTargetOptions {\n  app: AppInterface\n  apiKey: string\n  url: string\n  storeFqdn: string\n  grantedScopes: string[]\n  id?: string\n  subscriptionProductUrl?: string\n  checkoutCartUrl?: string\n  extensions: ExtensionInstance[]\n}\n\nasync function devUIExtensionsTarget({\n  app,\n  apiKey,\n  id,\n  url,\n  storeFqdn,\n  grantedScopes,\n  subscriptionProductUrl,\n  checkoutCartUrl,\n  extensions,\n}: DevUIExtensionsTargetOptions): Promise<ReverseHTTPProxyTarget> {\n  const cartUrl = await buildCartURLIfNeeded(extensions, storeFqdn, checkoutCartUrl)\n  return {\n    logPrefix: 'extensions',\n    pathPrefix: '/extensions',\n    action: async (stdout: Writable, stderr: Writable, signal: AbortSignal, port: number) => {\n      await devUIExtensions({\n        app,\n        id,\n        extensions,\n        stdout,\n        stderr,\n        signal,\n        url,\n        port,\n        storeFqdn,\n        apiKey,\n        grantedScopes,\n        checkoutCartUrl: cartUrl,\n        subscriptionProductUrl,\n        manifestVersion: MANIFEST_VERSION,\n      })\n    },\n  }\n}\n\ninterface DevDraftableExtensionsOptions {\n  app: AppInterface\n  apiKey: string\n  url: string\n  token: string\n  extensions: ExtensionInstance[]\n  remoteExtensions: {\n    [key: string]: string\n  }\n  specifications: ExtensionSpecification[]\n  unifiedDeployment: boolean\n}\n\nexport function devDraftableExtensionTarget({\n  extensions,\n  app,\n  url,\n  apiKey,\n  token,\n  remoteExtensions,\n  specifications,\n  unifiedDeployment,\n}: DevDraftableExtensionsOptions) {\n  return {\n    prefix: 'extensions',\n    action: async (stdout: Writable, stderr: Writable, signal: AbortSignal) => {\n      // Functions will only be passed to this target if unified deployments are enabled\n      const functions = extensions.filter((ext) => ext.isFunctionExtension)\n      await Promise.all(\n        functions.map(async (extension) => {\n          await buildFunctionExtension(extension, {\n            app,\n            stdout,\n            stderr,\n            useTasks: false,\n            signal,\n          })\n          const registrationId = remoteExtensions[extension.localIdentifier]\n          if (!registrationId) throw new AbortError(`Extension ${extension.localIdentifier} not found on remote app.`)\n          await updateExtensionDraft({extension, token, apiKey, registrationId, stdout, stderr, unifiedDeployment})\n        }),\n      )\n\n      await Promise.all(\n        extensions\n          .map((extension) => {\n            const registrationId = remoteExtensions[extension.localIdentifier]\n            if (!registrationId) throw new AbortError(`Extension ${extension.localIdentifier} not found on remote app.`)\n\n            const actions = [\n              setupConfigWatcher({\n                extension,\n                token,\n                apiKey,\n                registrationId,\n                stdout,\n                stderr,\n                signal,\n                specifications,\n                unifiedDeployment,\n              }),\n            ]\n\n            // Only extensions with esbuild feature should be whatched using esbuild\n            if (extension.features.includes('esbuild')) {\n              actions.push(\n                setupDraftableExtensionBundler({\n                  extension,\n                  app,\n                  url,\n                  token,\n                  apiKey,\n                  registrationId,\n                  stderr,\n                  stdout,\n                  signal,\n                  unifiedDeployment,\n                }),\n              )\n            }\n\n            // watch for Function changes that require a build and push\n            if (extension.isFunctionExtension) {\n              // watch for changes\n              actions.push(\n                setupFunctionWatcher({\n                  extension,\n                  app,\n                  stdout,\n                  stderr,\n                  signal,\n                  token,\n                  apiKey,\n                  registrationId,\n                  unifiedDeployment,\n                }),\n              )\n            }\n\n            return actions\n          })\n          .flat(),\n      )\n    },\n  }\n}\n\n/**\n * To prepare Checkout UI Extensions for dev'ing we need to retrieve a valid product variant ID\n * @param extensions - The UI Extensions to dev\n * @param store - The store FQDN\n */\nasync function buildCartURLIfNeeded(extensions: ExtensionInstance[], store: string, checkoutCartUrl?: string) {\n  const hasUIExtension = extensions.map((ext) => ext.type).includes('checkout_ui_extension')\n  if (!hasUIExtension) return undefined\n  if (checkoutCartUrl) return checkoutCartUrl\n  const variantId = await fetchProductVariant(store)\n  return `/cart/${variantId}:1`\n}\n\nasync function logMetadataForDev(options: {\n  devOptions: DevOptions\n  tunnelUrl: string\n  shouldUpdateURLs: boolean\n  storeFqdn: string\n}) {\n  const tunnelType = await getAnalyticsTunnelType(options.devOptions.commandConfig, options.tunnelUrl)\n  await metadata.addPublicMetadata(() => ({\n    cmd_dev_tunnel_type: tunnelType,\n    cmd_dev_tunnel_custom_hash: tunnelType === 'custom' ? hashString(options.tunnelUrl) : undefined,\n    cmd_dev_urls_updated: options.shouldUpdateURLs,\n    store_fqdn_hash: hashString(options.storeFqdn),\n    cmd_app_dependency_installation_skipped: options.devOptions.skipDependenciesInstallation,\n    cmd_app_reset_used: options.devOptions.reset,\n  }))\n\n  await metadata.addSensitiveMetadata(() => ({\n    store_fqdn: options.storeFqdn,\n    cmd_dev_tunnel_custom: tunnelType === 'custom' ? options.tunnelUrl : undefined,\n  }))\n}\n\nasync function validateCustomPorts(webConfigs: Web[]) {\n  const allPorts = webConfigs.map((config) => config.configuration.port).filter((port) => port)\n  const duplicatedPort = allPorts.find((port, index) => allPorts.indexOf(port) !== index)\n  if (duplicatedPort) {\n    throw new AbortError(`Found port ${duplicatedPort} for multiple webs.`, 'Please define a unique port for each web.')\n  }\n  await Promise.all(\n    allPorts.map(async (port) => {\n      const portAvailable = await checkPortAvailability(port!)\n      if (!portAvailable) {\n        throw new AbortError(`Hard-coded port ${port} is not available, please choose a different one.`)\n      }\n    }),\n  )\n}\n\nexport default dev\n"]}