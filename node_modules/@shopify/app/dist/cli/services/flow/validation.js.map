{"version":3,"file":"validation.js","sourceRoot":"","sources":["../../../../src/cli/services/flow/validation.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,0BAA0B,EAAC,MAAM,gBAAgB,CAAA;AACzD,OAAO,EAAC,GAAG,EAAC,MAAM,8BAA8B,CAAA;AAEhD,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,WAAwB,EAAE,IAAwB,EAAE,EAAE;IACnG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;QACvE,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE;YACpB,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC;gBACrB;oBACE,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;oBAC7B,IAAI,EAAE,CAAC,qBAAqB,CAAC;oBAC7B,OAAO,EAAE,sDAAsD;iBAChE;aACF,CAAC,CAAA;SACH;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,KAAK,aAAa,EAAE;YAC/C,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC;gBACrB;oBACE,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;oBAC7B,IAAI,EAAE,CAAC,sBAAsB,CAAC;oBAC9B,OAAO,EAAE,uDAAuD;iBACjE;aACF,CAAC,CAAA;SACH;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;AAE1E,MAAM,CAAC,MAAM,qCAAqC,GAAG,CACnD,aAAsB,EACtB,oBAA6B,EAC7B,aAAsB,EACtB,EAAE;IACF,IAAI,aAAa,IAAI,oBAAoB,EAAE;QACzC,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC;gBACrB;oBACE,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;oBAC7B,IAAI,EAAE,CAAC,+BAA+B,CAAC;oBACvC,OAAO,EAAE,2EAA2E;iBACrF;aACF,CAAC,CAAA;SACH;QAED,IAAI,CAAC,oBAAoB,EAAE;YACzB,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC;gBACrB;oBACE,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;oBAC7B,IAAI,EAAE,CAAC,uCAAuC,CAAC;oBAC/C,OAAO,EAAE,mFAAmF;iBAC7F;aACF,CAAC,CAAA;SACH;QAED,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC;gBACrB;oBACE,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;oBAC7B,IAAI,EAAE,CAAC,8BAA8B,CAAC;oBACtC,OAAO,EAAE,0EAA0E;iBACpF;aACF,CAAC,CAAA;SACH;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["import {ConfigField, FlowExtensionTypes} from './types.js'\nimport {SUPPORTED_COMMERCE_OBJECTS} from './constants.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\n\nexport const validateNonCommerceObjectShape = (configField: ConfigField, type: FlowExtensionTypes) => {\n  if (!Object.keys(SUPPORTED_COMMERCE_OBJECTS).includes(configField.type)) {\n    if (!configField.key) {\n      throw new zod.ZodError([\n        {\n          code: zod.ZodIssueCode.custom,\n          path: ['settings.fields.key'],\n          message: 'Key must be specified for non-commerce object fields',\n        },\n      ])\n    }\n\n    if (!configField.name && type === 'flow_action') {\n      throw new zod.ZodError([\n        {\n          code: zod.ZodIssueCode.custom,\n          path: ['settings.fields.name'],\n          message: 'Name must be specified for non-commerce object fields',\n        },\n      ])\n    }\n  }\n\n  return true\n}\n\nexport const startsWithHttps = (url: string) => url.startsWith('https://')\n\nexport const validateCustomConfigurationPageConfig = (\n  configPageUrl?: string,\n  configPagePreviewUrl?: string,\n  validationUrl?: string,\n) => {\n  if (configPageUrl || configPagePreviewUrl) {\n    if (!configPageUrl) {\n      throw new zod.ZodError([\n        {\n          code: zod.ZodIssueCode.custom,\n          path: ['extensions[0].config_page_url'],\n          message: 'To set a custom configuration page a `config_page_url` must be specified.',\n        },\n      ])\n    }\n\n    if (!configPagePreviewUrl) {\n      throw new zod.ZodError([\n        {\n          code: zod.ZodIssueCode.custom,\n          path: ['extensions[0].config_page_preview_url'],\n          message: 'To set a custom configuration page a `config_page_preview_url` must be specified.',\n        },\n      ])\n    }\n\n    if (!validationUrl) {\n      throw new zod.ZodError([\n        {\n          code: zod.ZodIssueCode.custom,\n          path: ['extensions[0].validation_url'],\n          message: 'To set a custom configuration page a `validation_url` must be specified.',\n        },\n      ])\n    }\n  }\n\n  return true\n}\n"]}